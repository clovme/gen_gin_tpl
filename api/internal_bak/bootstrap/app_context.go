// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.

package bootstrap

import (
	"gen_gin_tpl/internal/application"
	"gen_gin_tpl/internal/infrastructure/persistence"
	"gen_gin_tpl/internal/interfaces/api"
	"gen_gin_tpl/internal/interfaces/web"
	"gen_gin_tpl/internal/infrastructure/query"
	"gorm.io/gorm"
)

type appContext struct {
	ApiConfigHandler *api.ConfigHandler
	ApiLoginHandler *api.LoginHandler
	ApiPublicHandler *api.PublicHandler
	WebViewIndexHandler *web.ViewIndexHandler
	WebViewLoginHandler *web.ViewLoginHandler
}

func NewAppContext(db *gorm.DB) *appContext {
	configRepo := &persistence.ConfigRepository{DB: db, Q: query.Q}
	configService := &application.ConfigService{Repo: configRepo}
	configHandler := &api.ConfigHandler{ConfigService: configService}

	loginRepo := &persistence.LoginRepository{DB: db, Q: query.Q}
	loginService := &application.LoginService{Repo: loginRepo}
	loginHandler := &api.LoginHandler{LoginService: loginService}

	publicRepo := &persistence.PublicRepository{DB: db, Q: query.Q}
	publicService := &application.PublicService{Repo: publicRepo}
	publicHandler := &api.PublicHandler{PublicService: publicService}

	viewIndexHandler := &web.ViewIndexHandler{}

	viewLoginRepo := &persistence.View_loginRepository{DB: db, Q: query.Q}
	viewLoginService := &application.View_loginService{Repo: viewLoginRepo}
	viewLoginHandler := &web.ViewLoginHandler{View_loginService: viewLoginService}

	return &appContext{
		ApiConfigHandler: configHandler,
		ApiLoginHandler: loginHandler,
		ApiPublicHandler: publicHandler,
		WebViewIndexHandler: viewIndexHandler,
		WebViewLoginHandler: viewLoginHandler,
	}
}