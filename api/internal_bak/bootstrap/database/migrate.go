// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.
// Code generated by buildx tool. DO NOT EDIT.

package database

import (
	"gen_gin_tpl/internal/bootstrap/database/initdata"
	"gen_gin_tpl/internal/domain/auth/do_permission"
	"gen_gin_tpl/internal/domain/auth/do_role"
	"gen_gin_tpl/internal/domain/auth/do_role_group"
	"gen_gin_tpl/internal/domain/auth/do_role_permission"
	"gen_gin_tpl/internal/domain/auth/do_user_role"
	"gen_gin_tpl/internal/domain/do_config"
	"gen_gin_tpl/internal/domain/do_cors"
	"gen_gin_tpl/internal/domain/do_enums"
	"gen_gin_tpl/internal/domain/do_token"
	"gen_gin_tpl/internal/domain/do_user"
	"gen_gin_tpl/internal/infrastructure/query"
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
	"reflect"
)

func AutoMigrate(db *gorm.DB, dbq *query.Query, router gin.RoutesInfo) error {
	err := db.AutoMigrate(
		&do_permission.Permission{},
		&do_role.Role{},
		&do_role_group.RoleGroup{},
		&do_role_permission.RolePermission{},
		&do_user_role.UserRole{},
		&do_config.Config{},
		&do_cors.CorsWhitelist{},
		&do_enums.Enums{},
		&do_token.Token{},
		&do_user.User{},
	)

	if err != nil {
		return err
	}
	
	v := reflect.ValueOf(&initdata.InitData{Router: router, Q: query.Q})
	for i := 0; i < v.NumMethod(); i++ {
		v.Method(i).Call(nil)
	}
	return nil
}